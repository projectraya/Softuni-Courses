// <auto-generated />
using Library.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250507182429_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "George Orwell"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Jane Austen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mark Twain"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Haruki Murakami"
                        });
                });

            modelBuilder.Entity("Library.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearPublished")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            ImageUrl = "https://miro.medium.com/v2/resize:fit:7084/1*6QXManBm7wsBgDiagqPH8Q.png",
                            Title = "1984",
                            YearPublished = 1949
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CategoryId = 1,
                            ImageUrl = "https://m.media-amazon.com/images/I/91Lbhwt5RzL.jpg",
                            Title = "Animal Farm",
                            YearPublished = 1945
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            CategoryId = 3,
                            ImageUrl = "https://m.media-amazon.com/images/I/81a3sr-RgdL.jpg",
                            Title = "Pride and Prejudice",
                            YearPublished = 1813
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            CategoryId = 3,
                            ImageUrl = "https://m.media-amazon.com/images/I/A1dZA3BmyKL._AC_UF1000,1000_QL80_.jpg",
                            Title = "Emma",
                            YearPublished = 1815
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            CategoryId = 2,
                            ImageUrl = "https://cdn.europosters.eu/image/1300/214926.jpg",
                            Title = "Harry Potter and the Sorcerer's Stone",
                            YearPublished = 1997
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            CategoryId = 2,
                            ImageUrl = "https://cdn.europosters.eu/image/1300/214927.jpg",
                            Title = "Harry Potter and the Chamber of Secrets",
                            YearPublished = 1998
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CategoryId = 2,
                            ImageUrl = "https://cdn.europosters.eu/image/1300/214928.jpg",
                            Title = "Harry Potter and the Prisoner of Azkaban",
                            YearPublished = 1999
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            CategoryId = 3,
                            ImageUrl = "https://m.media-amazon.com/images/I/51VEmL80JJL._AC_UF1000,1000_QL80_.jpg",
                            Title = "The Adventures of Tom Sawyer",
                            YearPublished = 1876
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            CategoryId = 3,
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/6/61/Huckleberry_Finn_book.JPG",
                            Title = "Adventures of Huckleberry Finn",
                            YearPublished = 1884
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            CategoryId = 1,
                            ImageUrl = "https://www.ciela.com/media/catalog/product/cache/9a7ceae8a5abbd0253425b80f9ef99a5/k/a/kafka_on_the_shore_-_haruki_murakami_-_9780099458326_-_vintage_classics.jpg",
                            Title = "Kafka on the Shore",
                            YearPublished = 2002
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 5,
                            CategoryId = 1,
                            ImageUrl = "https://m.media-amazon.com/images/I/81zqVhvbHbL.jpg",
                            Title = "Norwegian Wood",
                            YearPublished = 1987
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            CategoryId = 1,
                            ImageUrl = "https://m.media-amazon.com/images/I/61iQW5TTZCL._AC_UF1000,1000_QL80_.jpg",
                            Title = "1Q84",
                            YearPublished = 2009
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 2,
                            CategoryId = 3,
                            ImageUrl = "https://m.media-amazon.com/images/I/818mKxj9pAL.jpg",
                            Title = "Sense and Sensibility",
                            YearPublished = 1811
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 1,
                            CategoryId = 1,
                            ImageUrl = "https://m.media-amazon.com/images/I/91VKuMIjd-L.jpg",
                            Title = "Down and Out in Paris and London",
                            YearPublished = 1933
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            CategoryId = 1,
                            ImageUrl = "https://m.media-amazon.com/images/I/81Q2BP9rKoL.jpg",
                            Title = "The Elephant Vanishes",
                            YearPublished = 1993
                        });
                });

            modelBuilder.Entity("Library.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Classic"
                        });
                });

            modelBuilder.Entity("Library.Models.Book", b =>
                {
                    b.HasOne("Library.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Library.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.Models.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
